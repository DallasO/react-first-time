{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","classes","onClick","value","Board","i","row","col","_this","this","squares","winner","includes","newBoard","idCounter","rows","j","concat","renderSquare","createBoard","React","Component","Game","_this2","Object","_home_dallas_Documents_GitHub_react_first_time_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_dallas_Documents_GitHub_react_first_time_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_dallas_Documents_GitHub_react_first_time_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","activeIndex","reverseOrder","slice","length","calculateWinner","setState","step","status","_this3","current","moves","map","move","desc","location","key","jumpTo","handleClick","toggleOrder","reverse","lines","_lines$i","_home_dallas_Documents_GitHub_react_first_time_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.248e0c38.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className={props.classes}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i, row, col) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i, row, col)}\n        classes={this.props.winner.includes(i) ? \"square winner\" : \"square\"}\n      />\n    );\n  }\n\n  createBoard() {\n    let newBoard = [];\n    let idCounter = 0;\n\n    for (var i = 0; i < 3; i++) {\n      let rows = [];\n\n      for (var j = 0; j < 3; j++) {\n        rows = rows.concat(this.renderSquare(idCounter, i + 1, j + 1));\n        idCounter++;\n      }\n\n      newBoard = newBoard.concat(<div className=\"board-row\">{rows}</div>);\n    }\n\n    return newBoard;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createBoard()}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      activeIndex: 0,\n      reverseOrder: false,\n    };\n  }\n\n  handleClick(i, row, col) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length -1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        row: row,\n        col: col,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      activeIndex: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n      activeIndex: step,\n    });\n  }\n\n  toggleOrder() {\n    this.setState({\n      reverseOrder: !this.state.reverseOrder,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      const location = step.row && step.col ?\n        '(' + step.row + '/' + step.col + ')' : '';\n      return (\n        <li key={move}>\n          <button\n            onClick={() => this.jumpTo(move)}\n            className={\n              this.state.activeIndex === move ? 'active' : ''\n            }\n          >{desc}</button>\n          <label>{location}</label>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner[0];\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i, row, col) => this.handleClick(i, row, col)}\n            winner={winner ? winner[1] : [null]}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>\n            <button\n              className=\"toggle\"\n              onClick={() => this.toggleOrder()}>\n              {this.state.reverseOrder ? \"Sort descending\" : \"Sort ascending\"}\n              </button>\n          </div>\n          <ol>{this.state.reverseOrder ? moves.reverse() : moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}